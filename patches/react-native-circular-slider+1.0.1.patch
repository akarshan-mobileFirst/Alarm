diff --git a/node_modules/react-native-circular-slider/.DS_Store b/node_modules/react-native-circular-slider/.DS_Store
new file mode 100644
index 0000000..6d7aa3d
Binary files /dev/null and b/node_modules/react-native-circular-slider/.DS_Store differ
diff --git a/node_modules/react-native-circular-slider/src/.DS_Store b/node_modules/react-native-circular-slider/src/.DS_Store
new file mode 100644
index 0000000..0f1c591
Binary files /dev/null and b/node_modules/react-native-circular-slider/src/.DS_Store differ
diff --git a/node_modules/react-native-circular-slider/src/CircularSlider.js b/node_modules/react-native-circular-slider/src/CircularSlider .js
similarity index 82%
rename from node_modules/react-native-circular-slider/src/CircularSlider.js
rename to node_modules/react-native-circular-slider/src/CircularSlider .js
index 32403b4..df6bae1 100644
--- a/node_modules/react-native-circular-slider/src/CircularSlider.js
+++ b/node_modules/react-native-circular-slider/src/CircularSlider .js	
@@ -1,5 +1,6 @@
-import React, { PureComponent, PropTypes } from 'react';
-import { PanResponder, View } from 'react-native';
+import React, { PureComponent } from 'react';
+import { PanResponder, View, Dimensions } from 'react-native';
+import PropTypes from 'prop-types';
 import Svg, { Circle, G, LinearGradient, Path, Defs, Stop } from 'react-native-svg';
 import range from 'lodash.range';
 import { interpolateHcl as interpolateGradient } from 'd3-interpolate';
@@ -61,6 +62,8 @@ export default class CircularSlider extends PureComponent {
     bgCircleColor: PropTypes.string,
     stopIcon: PropTypes.element,
     startIcon: PropTypes.element,
+    upIcon: PropTypes.element,
+    downIcon: PropTypes.element,
   }
 
   static defaultProps = {
@@ -78,7 +81,7 @@ export default class CircularSlider extends PureComponent {
     circleCenterY: false,
   }
 
-  componentWillMount() {
+  UNSAFE_componentWillMount() {
     this._sleepPanResponder = PanResponder.create({
       onMoveShouldSetPanResponder: (evt, gestureState) => true,
       onMoveShouldSetPanResponderCapture: (evt, gestureState) => true,
@@ -131,7 +134,7 @@ export default class CircularSlider extends PureComponent {
   setCircleCenter = () => {
     this._circle.measure((x, y, w, h, px , py) => {
       const halfOfContainer = this.getContainerWidth() / 2;
-      this.setState({ circleCenterX: px + halfOfContainer, circleCenterY: py + halfOfContainer });
+      this.setState({ circleCenterX: px + halfOfContainer, circleCenterY: px + halfOfContainer });
     });
   }
 
@@ -142,7 +145,7 @@ export default class CircularSlider extends PureComponent {
 
   render() {
     const { startAngle, angleLength, segments, strokeWidth, radius, gradientColorFrom, gradientColorTo, bgCircleColor,
-      showClockFace, clockFaceColor, startIcon, stopIcon } = this.props;
+      showClockFace, clockFaceColor } = this.props;
 
     const containerWidth = this.getContainerWidth();
 
@@ -193,7 +196,7 @@ export default class CircularSlider extends PureComponent {
             {
               range(segments).map(i => {
                 const { fromX, fromY, toX, toY } = calculateArcCircle(i, segments, radius, startAngle, angleLength);
-                const d = `M ${fromX.toFixed(2)} ${fromY.toFixed(2)} A ${radius} ${radius} 0 0 1 ${toX.toFixed(2)} ${toY.toFixed(2)}`;
+                const d = `M ${fromX.toFixed(2)} ${fromY.toFixed(2)} A ${radius} ${radius} ${angleLength > (2 * Math.PI) / 2 ? "0 1 1" : "0 0 1"} ${toX.toFixed(2)} ${toY.toFixed(2)}`;
 
                 return (
                   <Path
@@ -222,10 +225,17 @@ export default class CircularSlider extends PureComponent {
                 fill={bgCircleColor}
                 stroke={gradientColorTo}
                 strokeWidth="1"
+                
               />
-              {
-                stopIcon
-              }
+              <G transform={{ translate: `${-8}, ${-8}` }}>
+                <Path d="M2,12.9h1.7h3h2.7h3H14c0.4,0,0.7-0.3,0.7-0.7c0-0.4-0.3-0.7-0.7-0.7c-0.9,0-1.7-0.7-1.7-1.7v-4
+                  c0-2.1-1.5-3.8-3.4-4.2C9,1.6,9,1.4,9,1.3c0-0.5-0.4-1-1-1c-0.5,0-1,0.4-1,1c0,0.2,0,0.3,0.1,0.4c-2,0.4-3.4,2.1-3.4,4.2v4
+                  c0,0.9-0.7,1.7-1.7,1.7c-0.4,0-0.7,0.3-0.7,0.7C1.3,12.6,1.6,12.9,2,12.9z"/>
+                <Path d="M8,15.7c1.1,0,2.1-0.9,2.1-2.1H5.9C5.9,14.8,6.9,15.7,8,15.7z"/>
+                {/* {
+                  stopIcon
+                } */}
+              </G>              
             </G>
 
             {/*
@@ -244,9 +254,15 @@ export default class CircularSlider extends PureComponent {
                 stroke={gradientColorFrom}
                 strokeWidth="1"
               />
-              {
-                startIcon
-              }
+              <G transform={{ translate: `${-8}, ${-8}` }}>
+                <Path d="M11.7,10.5c-3.6,0-6.4-2.9-6.4-6.4c0-0.7,0.1-1.4,0.4-2.1C3.1,2.9,1.2,5.3,1.2,8.1c0,3.6,2.9,6.4,6.4,6.4c2.8,0,5.2-1.8,6.1-4.4C13.1,10.4,12.4,10.5,11.7,10.5z"/>
+                <Path d="M8,7.6l2-2.5H8V4.4H11v0.6L9,7.6h2v0.7H8V7.6z"/>
+                <Path d="M11.7,5.4l1.5-1.9h-1.4V3h2.2v0.5l-1.5,1.9h1.5v0.5h-2.2V5.4z"/>
+                <Path d="M9.4,3l1.1-1.4h-1V1.3H11v0.4L9.9,3H11v0.4H9.4V3z"/>
+                {/* {
+                  startIcon
+                } */}
+              </G>  
             </G>
           </G>
         </Svg>
diff --git a/node_modules/react-native-circular-slider/src/ClockFace.js b/node_modules/react-native-circular-slider/src/ClockFace.js
index c8d0db9..d1e6f3c 100644
--- a/node_modules/react-native-circular-slider/src/ClockFace.js
+++ b/node_modules/react-native-circular-slider/src/ClockFace.js
@@ -1,5 +1,6 @@
-import React, { PureComponent, PropTypes } from 'react';
+import React, { PureComponent } from 'react';
 import { G, Circle, Text, Line } from 'react-native-svg';
+import PropTypes from 'prop-types';
 import range from 'lodash.range';
 
 
@@ -13,7 +14,7 @@ export default class ClockFace extends PureComponent {
   render() {
     const { r, stroke } = this.props;
     const faceRadius = r - 5;
-    const textRadius = r - 26;
+    const textRadius = r - 33;
 
     return (
       <G>
@@ -35,20 +36,42 @@ export default class ClockFace extends PureComponent {
             );
           })
         }
-      <G transform={{translate: "0, -9"}}>
+      <G transform={{translate: "0, 5"}}>
           {
-            range(12).map((h, i) => (
+            range(12).map((h, i) => {
+              let value = (h + 1) * 2;
+              switch(i) {
+                case 2: 
+                  value = "6AM";
+                  break;
+                case 5: 
+                  value = "12PM";
+                  break;
+                case 8: 
+                  value = "6PM";
+                  break;
+                case 11: 
+                  value = "12AM";
+                  break;
+                case 6:
+                case 7:
+                case 9:
+                case 10:
+                  value -= 12;
+              }
+
+              return (
               <Text
                 key={i}
                 fill={stroke}
-                fontSize="16"
+                fontSize="15"
                 textAnchor="middle"
                 x={textRadius * Math.cos(2 * Math.PI / 12 * i - Math.PI / 2 + Math.PI / 6)}
                 y={textRadius * Math.sin(2 * Math.PI / 12 * i - Math.PI / 2 + Math.PI / 6)}
               >
-                {h + 1}
+                {value}
               </Text>
-            ))
+            )})
           }
         </G>
       </G>
